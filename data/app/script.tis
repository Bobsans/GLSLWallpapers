var currentShader = null;

function self.ready() {
    var configs = view.LoadConfigs();

    $(#upsslider).value = $(#upsslidervalue).value = configs.UpdatesPerSecond;
    $(#fpsslider).value = $(#fpsslidervalue).value = configs.FramesPerSecond;
    $(#tsslider).value = $(#tsslidervalue).value = configs.TimeScale;
    $(#mousetoggle).checked = configs.MouseInteract;
    currentShader = configs.ShaderName;

    var shaders = view.LoadShaders();

    for(var shader in shaders) {
        $(#shaderlist).append(<Shader title={shader.Name} author={shader.Author} image={shader.Image} value={shader.FileName}/>);
    }
}

event change $(#upsslider) {
    view.ConfigSetInteger('UpdatesPerSecond', $(#upsslidervalue).value = this.value);
}

event change $(#fpsslider) {
    view.ConfigSetInteger('FramesPerSecond', $(#fpsslidervalue).value = this.value);
}

event change $(#tsslider) {
    view.ConfigSetDouble('TimeScale', $(#tsslidervalue).value = this.value);
}

event change $(#mousetoggle) {
    view.ConfigSetBoolean('MouseInteract', this.value);
}

event change $(.shader) {
    view.ConfigSetString('ShaderName', this.value);
}

function Shader(props) {
    var component = <div.shader value={props.value}>
        <img src={props.image || 'no-image.png'}/>
        <div.info>
            <h2>{props.title || '-'}</h2>
            <div><b>Author:</b> {props.author || '-'}</div>
        </div>
    </div>;

    if (props.value === currentShader) {
        component[0].checked = true;
    }

    return component;
}
